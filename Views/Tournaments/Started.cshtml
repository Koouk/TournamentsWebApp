@model TournamentsWebApp.Models.ViewModel
@using Microsoft.AspNetCore.Authorization
@using TournamentsWebApp.Models;
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Details";
}

<h1> "@Model.tournament.Name" Tournament Details  </h1>

<h3> Tournament has started! </h3>

<fieldset>
    <legend style="font-family: 'Segoe UI'; color: rgb(73,171,210); font-size: large;">Tournament location:</legend>
    <iframe width="100%"
            height="400px"
            style="border:0"
            loading="lazy"
            allowfullscreen
            src="https://www.google.com/maps/embed/v1/place?key=AIzaSyBkScl8QvQwXr1qdINMPHMC1tEuMx3Va34&q=@Model.tournament.localization">
    </iframe>
    <!--
    <div id="googleMap" style="height:400px;width:100%;"></div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script>

        function myMap() {
            var myCenter = new google.maps.LatLng(52.403440, 16.950744);
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': "@Model.tournament.localization" }, function (results, status) {
                if (status == 'OK') {
                    myCenter = results[0].geometry.locationl
                    alert('Geocode was OK' );
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });

            var mapProp = { center: myCenter, zoom: 12, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
            var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
            var marker = new google.maps.Marker({ position: myCenter });
            marker.setMap(map);
        }
    </script>
     <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBkScl8QvQwXr1qdINMPHMC1tEuMx3Va34&callback=myMap"></script> -->
</fieldset>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.Deadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.Deadline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.Discipline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.Discipline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.localization)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.localization)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.currentPart)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.currentPart)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.tournament.maxPart)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.tournament.maxPart)
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated && Model.userMatches.Count > 0)
    {
        <h3> Your next matches:</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <p> First opponent</p>
                    </th>
                    <th>
                        <p> Second Opponent</p>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.userMatches)
                {
                    <tr>
                        <td>
                            @if (item.OpponentFirst is null)
                            {
                                <p> TBD </p>}
                            else
                            {
                                var toShow = item.OpponentFirst.FirstName + " Licence:" + item.LicenceNumberFirst;
                                @Html.DisplayFor(modelItem => toShow)
                            }
                        </td>
                        <td>
                            @if (item.OpponentSecond is null)
                            {
                                <p> TBD </p>}
                            else
                            {
                                var toShow = item.OpponentSecond.FirstName + " Licence:" + item.LicenceNumberSecond;
                                @Html.DisplayFor(modelItem => toShow)
                            }

                        </td>
                        <td>
                            @if (item.OpponentSecondID != null && item.OpponentFirstID != null)
                            {
                                <a asp-controller="Matches" asp-action="Edit" asp-route-id="@item.ID">Set result</a>
                            }


                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }


    <!---            DRABINKA                  -->

    <div class="my_gracket"></div>
    <script type="text/javascript">
    $(document).ready(function ($) {
            var data = @Html.Raw(Json.Serialize(Model.bracket))
            $(".my_gracket").gracket({
                src: data
            });

        })

    </script>



    <!---            DRABINKA                  -->


    <table class="table">
        <thead>
            <tr>
                <th>
                    <p> First opponent</p>
                </th>
                <th>
                    <p> Second Opponent</p>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.allMatches)
            {
                <tr>
                    <td>
                        @if (item.OpponentFirst is null)
                        {
                            <p> TBD </p>}
                        else
                        {
                            var toShow = item.OpponentFirst.FirstName + " Licence:" + item.LicenceNumberFirst;
                            @Html.DisplayFor(modelItem => toShow)
                        }
                    </td>
                    <td>
                        @if (item.OpponentSecond is null)
                        {
                            <p> TBD </p>}
                        else
                        {
                            var toShow = item.OpponentSecond.FirstName + " Licence:" + item.LicenceNumberSecond;
                            @Html.DisplayFor(modelItem => toShow)
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.allMatches.Last().WinnerID != null)
    {
        <h2> Winner: @Model.allMatches.Last().WinnerID</h2>

    }


    <a asp-action="Index">Back to List</a>
</div>
